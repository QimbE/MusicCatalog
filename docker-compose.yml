volumes: 
  musiccatalog_data:
    
networks:
  dev:
    driver: bridge

services:
  musiccatalog.api:
    image: docker.io/library/musiccatalog
    depends_on: 
      - "musiccatalog_db"
      - "redis"
    container_name: musiccatalog-services
    ports:
      - "8088:80"
    build:
      context: .
      dockerfile: MusicCatalog.API/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Server=musiccatalog_db;Port=5432;Database=${POSTGRES_DB};Username=postgres;Password=${POSTGRES_PASSWORD}
      - ConnectionStrings__CacheConnection=redis:6379
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - JwtSettings__Issuer=${JWT_ISSUER}
      - JwtSettings__Audience=${JWT_AUDIENCE}
      - JwtSettings__Key=${JWT_KEY}
      - JwtSettings__ExpiryTime=${JWT_EXPIRY_TIME}
    networks: 
      - dev
  musiccatalog_db:
    image: postgres:latest
    container_name: musiccatalog_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5433:5432"
    networks:
      - dev
    restart: always
    volumes:
      - musiccatalog_data:/var/lib/postgresql/data
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - dev
    volumes:
      - /path/to/local/data:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"